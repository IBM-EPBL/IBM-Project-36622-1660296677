# -*- coding: utf-8 -*-
"""Assignment3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J1FKZXe-dO0YNgWO3WXVGj0PiP75aqMx
"""

!unzip  '/content/Flowers-Dataset.zip'

from tensorflow.keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(rescale=1./255,
                                   zoom_range=0.2,
                                   horizontal_flip=True)

test_datagen = ImageDataGenerator(rescale=1./255)

xtrain = train_datagen.flow_from_directory('/content/dataset/Training',
                                           target_size=(64,64),
                                           class_mode='categorical',
                                           batch_size=100)

xtest = test_datagen.flow_from_directory('/content/dataset/Testing',
                                         target_size=(64,64),
                                         class_mode='categorical',
                                         batch_size=10)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Convolution2D, MaxPooling2D, Flatten, Dense

model = Sequential() # Initializing the model
model.add(Convolution2D(32,(3,3),activation='relu',input_shape=(64,64,3))) # Covolution layer
model.add(MaxPooling2D(pool_size=(2,2))) # Max pooling layer
model.add(Flatten()) # Flatten layer
model.add(Dense(300,activation='relu')) # Hidden layer 1
model.add(Dense(150,activation='relu')) # Hidden layer 2
model.add(Dense(4,activation='softmax'))

model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

model.fit_generator(xtrain,
                    steps_per_epoch=len(xtrain),
                    epochs=10,
                    validation_data=xtest,
                    validation_steps=len(xtest))

model.save('flowers.h5')

from tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau

model.fit_generator(xtrain,
                    steps_per_epoch=len(xtrain),
                    epochs=100,
                    callbacks=callbacks,
                    validation_data=xtest,
                    validation_steps=len(xtest),)